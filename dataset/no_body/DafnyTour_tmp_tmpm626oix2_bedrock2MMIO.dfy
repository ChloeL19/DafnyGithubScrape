
function And(a: bool, b: bool): bool { a && b }
function Or(a: bool, b: bool): bool { a || b }
function Not(a: bool): bool { ! a }

// takes 20s in Coq 8.9 and 40s to Qed and times out in Coq 8.10, while it's immediate in Dafny
lemma test(Y: int, r0: int, r: int, q: int, q0: int, r1: int, q1 : int)
    ensures
  Not( Or( And( 131072 <= Y, Y < 139264),
       Or( And( 268468224 <= Y, Y < 268500992),
       Or( And( 268509184 <= Y, Y < 268513280), And( 268513280 <= Y, Y < 268517376))))) ==>
  (Or( And( 131072 <= r0, r0 < 139264),
   Or( And( 268468224 <= r0, r0 < 268500992),
   Or( And( 268509184 <= r0, r0 < 268513280), And( 268513280 <= r0, r0 < 268517376)))) ==>
   (r == 0 ==>
    (And( 0 <= Y, Y < 4294967296) ==>
     ((Not( 4 == 0) ==> r0 == 4 * q + r) ==>
      ((0 < 4 ==> And( 0 <= r, r < 4)) ==>
       ((4 < 0 ==> And( 4 < r, r <= 0)) ==>
        ((4 == 0 ==> q == 0) ==>
         ((4 == 0 ==> r == 0) ==>
          ((Not( 4294967296 == 0) ==> Y - r1 == 4294967296 * q0 + r0) ==>
           ((0 < 4294967296 ==> And( 0 <= r0, r0 < 4294967296)) ==>
            ((4294967296 < 0 ==> And( 4294967296 < r0, r0 <= 0)) ==>
             ((4294967296 == 0 ==> q0 == 0) ==>
              ((4294967296 == 0 ==> r0 == 0) ==>
               ((Not( 4294967296 == 0) ==> 2 == 4294967296 * q1 + r1) ==>
                ((0 < 4294967296 ==> And( 0 <= r1, r1 < 4294967296)) ==>
                 ((4294967296 < 0 ==> And( 4294967296 < r1, r1 <= 0)) ==>
                  ((4294967296 == 0 ==> q1 == 0) ==> ((4294967296 == 0 ==> r1 == 0) ==> false))))))))))))))))))
{/* TODO */ }

